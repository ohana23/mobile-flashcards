{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannyohana/Desktop/mobile-flashcards/components/DeckList.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler';\nimport AsyncStorage from '@react-native-community/async-storage';\n\nvar DeckList = function (_React$Component) {\n  _inherits(DeckList, _React$Component);\n\n  var _super = _createSuper(DeckList);\n\n  function DeckList() {\n    var _this;\n\n    _classCallCheck(this, DeckList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      DATA: [{\n        id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n        title: 'Biology 2',\n        subtitle: '17 cards'\n      }, {\n        id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n        title: 'Italian',\n        subtitle: '4 cards'\n      }, {\n        id: '58694a0f-3da1-471f-bd96-145571e29d72',\n        title: 'Discrete Structures',\n        subtitle: '2 cards'\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(DeckList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var DATA = this.state.DATA;\n\n      var DeckItem = function DeckItem(_ref) {\n        var title = _ref.title,\n            subtitle = _ref.subtitle;\n        return React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Deck Details', {\n              title: title,\n              subtitle: subtitle\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.title,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }\n        }, title), React.createElement(Text, {\n          style: styles.subtitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }\n        }, subtitle)));\n      };\n\n      var renderItem = function renderItem(_ref2) {\n        var item = _ref2.item;\n        return React.createElement(DeckItem, {\n          title: item.title,\n          subtitle: item.subtitle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        });\n      };\n\n      var AddDeckButton = function AddDeckButton() {\n        return React.createElement(TouchableOpacity, {\n          style: styles.button,\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Create Deck');\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        }, \"CREATE DECK\"));\n      };\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }\n      }, React.createElement(FlatList, {\n        data: DATA,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }), React.createElement(AddDeckButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return DeckList;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  item: {\n    backgroundColor: 'rgb(10, 125, 240)',\n    borderRadius: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10,\n    padding: 20\n  },\n  title: {\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    color: 'white'\n  },\n  button: {\n    fontSize: 15,\n    fontWeight: 'bold',\n    color: 'rgb(10, 125, 240)',\n    height: 80,\n    textAlign: 'center',\n    padding: 15,\n    letterSpacing: 1\n  }\n});\nexport default DeckList;","map":{"version":3,"sources":["/Users/dannyohana/Desktop/mobile-flashcards/components/DeckList.js"],"names":["React","FlatList","TouchableOpacity","AsyncStorage","DeckList","state","DATA","id","title","subtitle","DeckItem","props","navigation","navigate","styles","item","renderItem","AddDeckButton","button","container","Component","StyleSheet","create","flex","backgroundColor","borderRadius","marginLeft","marginRight","marginTop","padding","fontSize","color","fontWeight","height","textAlign","letterSpacing"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { FlatList, TouchableOpacity } from 'react-native-gesture-handler'\nimport AsyncStorage from '@react-native-community/async-storage'\n\nclass DeckList extends React.Component {\n    state = {\n        DATA: [\n            {\n                id: 'bd7acbea-c1b1-46c2-aed5-3ad53abb28ba',\n                title: 'Biology 2',\n                subtitle: '17 cards'\n            },\n            {\n                id: '3ac68afc-c605-48d3-a4f8-fbd91aa97f63',\n                title: 'Italian',\n                subtitle: '4 cards'\n            },\n            {\n                id: '58694a0f-3da1-471f-bd96-145571e29d72',\n                title: 'Discrete Structures',\n                subtitle: '2 cards'\n            },\n        ],\n    }\n\n    // onSubmit = async() => {\n    //     this.setState({ DATA: []})\n    //     await AsyncStorage.setItem('data', this.state.DATA)\n    // }\n\n    render() {\n        const { DATA } = this.state\n\n        const DeckItem = ({ title, subtitle }) => (\n            <TouchableOpacity\n                onPress={() => this.props.navigation.navigate('Deck Details', {\n                    title: title,\n                    subtitle: subtitle\n                })}\n            >\n                <View style={styles.item}>\n                        <Text style={styles.title}>{title}</Text>\n                        <Text style={styles.subtitle}>{subtitle}</Text>\n                </View>\n            </TouchableOpacity>\n        )\n\n        const renderItem = ({ item }) => (\n            <DeckItem title={item.title} subtitle={item.subtitle}/>\n        )\n\n        const AddDeckButton = () => {\n            return (\n                <TouchableOpacity\n                    style={styles.button}\n                    onPress={() => this.props.navigation.navigate('Create Deck')}\n                >\n                    <Text style={styles.button}>CREATE DECK</Text>\n                </TouchableOpacity>\n            )\n        }\n\n        return (\n            <View style={styles.container}>\n                <FlatList \n                    data={DATA}\n                    renderItem={renderItem}\n                    keyExtractor={item => item.id}\n                />\n                <AddDeckButton />\n\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n    },\n    item: {\n        backgroundColor: 'rgb(10, 125, 240)',\n        borderRadius: 10,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 10,\n        padding: 20,\n    },\n    title: {\n        fontSize: 20,\n        color: 'white',\n        fontWeight: 'bold'\n    },\n    subtitle: {\n        color: 'white'\n    },\n    button: {\n        fontSize: 15,\n        fontWeight: 'bold',\n        color: 'rgb(10, 125, 240)',\n        height: 80,\n        textAlign: 'center',\n        padding: 15,\n        letterSpacing: 1\n    }\n  })\n  \n\nexport default DeckList"]},"metadata":{},"sourceType":"module"}