{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannyohana/Desktop/mobile-flashcards/components/QuizResults.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport { useNavigation } from '@react-navigation/native';\n\nvar QuizResults = function (_React$Component) {\n  _inherits(QuizResults, _React$Component);\n\n  var _super = _createSuper(QuizResults);\n\n  function QuizResults() {\n    _classCallCheck(this, QuizResults);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(QuizResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          correctAnswers = _this$props.correctAnswers,\n          totalQuestions = _this$props.totalQuestions,\n          handleRestart = _this$props.handleRestart,\n          navigation = _this$props.navigation;\n      var score = correctAnswers / totalQuestions;\n      return React.createElement(View, {\n        style: score >= 0.9 ? [styles.container, styles.backgroundColorSuccess] : [styles.container, styles.backgroundColorFailure],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }\n      }, \"Results\"), React.createElement(Text, {\n        style: styles.score,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, correctAnswers, \" out of \", totalQuestions, \" correct\"), React.createElement(View, {\n        style: styles.buttonGroup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          handleRestart();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }\n      }, \"RESTART QUIZ\")), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          navigation.goBack();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, \"BACK TO DECK\"))));\n    }\n  }]);\n\n  return QuizResults;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  backgroundColorSuccess: {\n    backgroundColor: '#28A745'\n  },\n  backgroundColorFailure: {\n    backgroundColor: '#DC3545'\n  },\n  text: {\n    textAlign: 'center',\n    fontSize: 50,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  score: {\n    fontSize: 30,\n    color: 'white'\n  },\n  button: {\n    height: 50,\n    padding: 8,\n    marginBottom: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: 'bold',\n    letterSpacing: 1,\n    textAlign: 'center'\n  },\n  buttonGroup: {\n    marginTop: 100\n  }\n});\nexport default function (props) {\n  var navigation = useNavigation();\n  return React.createElement(QuizResults, _extends({}, props, {\n    navigation: navigation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/dannyohana/Desktop/mobile-flashcards/components/QuizResults.js"],"names":["React","TouchableOpacity","useNavigation","QuizResults","props","correctAnswers","totalQuestions","handleRestart","navigation","score","styles","container","backgroundColorSuccess","backgroundColorFailure","text","buttonGroup","button","buttonText","goBack","Component","StyleSheet","create","flex","alignItems","justifyContent","backgroundColor","textAlign","fontSize","fontWeight","color","height","padding","marginBottom","letterSpacing","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport { useNavigation } from '@react-navigation/native'\n\nclass QuizResults extends React.Component {\n    \n    render() {\n        const { correctAnswers, totalQuestions, handleRestart, navigation } = this.props\n        const score = correctAnswers / totalQuestions\n\n        return (\n            <View style={score >= 0.9 ? [styles.container, styles.backgroundColorSuccess] : [styles.container, styles.backgroundColorFailure]}>\n                <Text style={styles.text}>Results</Text>\n                \n                <Text style={styles.score}>\n                    {correctAnswers} out of {totalQuestions} correct\n                </Text>\n\n                <View style={styles.buttonGroup}>\n                    <TouchableOpacity \n                        style={styles.button}\n                        onPress={() => {\n                            handleRestart()\n                        }}\n                    >\n                        <Text style={styles.buttonText}>RESTART QUIZ</Text>\n                    </TouchableOpacity>\n\n                    <TouchableOpacity \n                        style={styles.button}\n                        onPress={() => {\n                            navigation.goBack()\n                        }}\n                    >\n                        <Text style={styles.buttonText}>BACK TO DECK</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    backgroundColorSuccess: {\n        backgroundColor: '#28A745'\n    },\n    backgroundColorFailure: {\n        backgroundColor: '#DC3545'\n    },\n    text: {\n        textAlign: 'center',\n        fontSize: 50,\n        fontWeight: 'bold',\n        color: 'white',\n    },\n    score: {\n        fontSize: 30,\n        color: 'white'\n    },\n    button: {\n        height: 50,\n        padding: 8,\n        marginBottom: 20,\n    },\n    buttonText: {\n        color: 'white',\n        fontSize: 20,\n        fontWeight: 'bold',\n        letterSpacing: 1,\n        textAlign: 'center',\n    },\n    buttonGroup: {\n        marginTop: 100,\n    }\n  })\n  \n\nexport default function(props) {\n    const navigation = useNavigation()\n    return <QuizResults {...props} navigation={navigation} />\n}"]},"metadata":{},"sourceType":"module"}