{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannyohana/Desktop/mobile-flashcards/components/Quiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport QuizResults from \"./QuizResults\";\n\nvar Quiz = function (_React$Component) {\n  _inherits(Quiz, _React$Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n    console.log(props);\n    _this.state = {\n      questionNumber: 1,\n      showAnswer: false,\n      correctAnswers: 0\n    };\n    _this.handleRestart = _this.handleRestart.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"handleAnswer\",\n    value: function handleAnswer(ans) {\n      this.setState({\n        questionNumber: this.state.questionNumber + 1,\n        showAnswer: false,\n        correctAnswers: ans ? this.state.correctAnswers + 1 : this.state.correctAnswers\n      });\n    }\n  }, {\n    key: \"handleRestart\",\n    value: function handleRestart() {\n      this.setState({\n        questionNumber: 1,\n        showAnswer: false,\n        correctAnswers: 0\n      });\n    }\n  }, {\n    key: \"showAnswer\",\n    value: function showAnswer() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.answer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, this.deckList[this.state.questionNumber - 1].answer), React.createElement(View, {\n        style: styles.buttonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.handleAnswer(true);\n        },\n        style: styles.btnSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      }, \"Correct\"))), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.handleAnswer(false);\n        },\n        style: styles.btnError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 33\n        }\n      }, \"Incorrect\")))));\n    }\n  }, {\n    key: \"showAnswerButton\",\n    value: function showAnswerButton() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.bottom,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: styles.showAnswerBtn,\n        onPress: function onPress() {\n          return _this3.setState({\n            showAnswer: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.showAnswerBtnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, \"Show answer\")));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          questionNumber = _this$state.questionNumber,\n          showAnswer = _this$state.showAnswer,\n          correctAnswers = _this$state.correctAnswers;\n      return React.createElement(View, {\n        style: styles.viewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, questionNumber <= this.deckList.length && React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.progress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, questionNumber, \" / \", this.deckList.length), React.createElement(Text, {\n        style: styles.question,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, this.deckList[questionNumber - 1].question)), questionNumber <= this.deckList.length ? showAnswer ? this.showAnswer() : this.showAnswerButton() : React.createElement(QuizResults, {\n        correctAnswers: correctAnswers,\n        totalQuestions: this.deckList.length,\n        handleRestart: this.handleRestart,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 23\n        }\n      }));\n    }\n  }]);\n\n  return Quiz;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  bottom: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    marginBottom: 15\n  },\n  question: {\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'center',\n    marginTop: 10,\n    marginBottom: 100,\n    padding: 15\n  },\n  answer: {\n    fontWeight: 'bold',\n    fontSize: 24,\n    textAlign: 'center',\n    marginBottom: 100,\n    padding: 15,\n    color: 'rgb(10, 125, 240)'\n  },\n  showAnswerBtn: {\n    backgroundColor: 'rgb(10, 125, 240)',\n    borderRadius: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10,\n    padding: 20\n  },\n  showAnswerBtnText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    letterSpacing: 1\n  },\n  viewContainer: {\n    flex: 1\n  },\n  progress: {\n    fontSize: 20,\n    color: 'gray',\n    fontWeight: 'bold',\n    backgroundColor: 'lightgray',\n    width: 80,\n    textAlign: 'center'\n  },\n  button: {\n    backgroundColor: 'green',\n    margin: 10\n  },\n  btnSuccess: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 10,\n    marginRight: 5,\n    padding: 20,\n    borderRadius: 10,\n    backgroundColor: '#28A745'\n  },\n  btnError: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 5,\n    marginRight: 10,\n    padding: 20,\n    borderRadius: 10,\n    backgroundColor: '#DC3545'\n  },\n  btnText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    letterSpacing: 0.5\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  }\n});\nexport default Quiz;","map":{"version":3,"sources":["/Users/dannyohana/Desktop/mobile-flashcards/components/Quiz.js"],"names":["React","TouchableOpacity","QuizResults","Quiz","props","console","log","state","questionNumber","showAnswer","correctAnswers","handleRestart","bind","ans","setState","styles","bottom","answer","deckList","buttonsContainer","flex","handleAnswer","btnSuccess","btnText","btnError","showAnswerBtn","showAnswerBtnText","viewContainer","length","progress","question","showAnswerButton","Component","StyleSheet","create","justifyContent","marginBottom","fontWeight","fontSize","textAlign","marginTop","padding","color","backgroundColor","borderRadius","marginLeft","marginRight","textTransform","letterSpacing","width","button","margin","alignItems","flexDirection"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,OAAOC,WAAP;;IAEMC,I;;;;;AACF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAKG,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,CADP;AAETC,MAAAA,UAAU,EAAE,KAFH;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,+BAArB;AATe;AAUlB;;;;iCAEYC,G,EAAK;AACd,WAAKC,QAAL,CAAc;AACVN,QAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAAX,GAA4B,CADlC;AAEVC,QAAAA,UAAU,EAAE,KAFF;AAGVC,QAAAA,cAAc,EAAEG,GAAG,GAAG,KAAKN,KAAL,CAAWG,cAAX,GAA4B,CAA/B,GAAmC,KAAKH,KAAL,CAAWG;AAHvD,OAAd;AAKH;;;oCAEe;AACZ,WAAKI,QAAL,CAAc;AACVN,QAAAA,cAAc,EAAE,CADN;AAEVC,QAAAA,UAAU,EAAE,KAFF;AAGVC,QAAAA,cAAc,EAAE;AAHN,OAAd;AAKH;;;iCAEY;AAAA;;AACT,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA6B,KAAKC,QAAL,CAAc,KAAKX,KAAL,CAAWC,cAAX,GAA4B,CAA1C,EAA6CS,MAA1E,CADJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAL,CAAkB,IAAlB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACO,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHR,CADJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAL,CAAkB,KAAlB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACS,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGQ,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHR,CADJ,CATJ,CAHJ,CADJ;AAwBH;;;uCAEkB;AAAA;;AACf,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAER,MAAM,CAACC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,KAAK,EAAED,MAAM,CAACU,aADlB;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACX,QAAL,CAAc;AAAEL,YAAAA,UAAU,EAAE;AAAd,WAAd,CAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEM,MAAM,CAACW,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ;AAUH;;;6BAEQ;AAAA,wBACkD,KAAKnB,KADvD;AAAA,UACGC,cADH,eACGA,cADH;AAAA,UACmBC,UADnB,eACmBA,UADnB;AAAA,UAC+BC,cAD/B,eAC+BA,cAD/B;AAGL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEK,MAAM,CAACY,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKnB,cAAc,IAAI,KAAKU,QAAL,CAAcU,MAAhC,IACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACc,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+BrB,cAA/B,SAAkD,KAAKU,QAAL,CAAcU,MAAhE,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACe,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKZ,QAAL,CAAcV,cAAc,GAAG,CAA/B,EAAkCsB,QADvC,CAFJ,CAFR,EAUKtB,cAAc,IAAI,KAAKU,QAAL,CAAcU,MAAhC,GACKnB,UAAU,GAAG,KAAKA,UAAL,EAAH,GAAuB,KAAKsB,gBAAL,EADtC,GAEK,oBAAC,WAAD;AACE,QAAA,cAAc,EAAErB,cADlB;AAEE,QAAA,cAAc,EAAE,KAAKQ,QAAL,CAAcU,MAFhC;AAGE,QAAA,aAAa,EAAE,KAAKjB,aAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZV,CADJ;AAoBH;;;;EA5FcX,KAAK,CAACgC,S;;AA+FzB,IAAMjB,MAAM,GAAGkB,UAAU,CAACC,MAAX,CAAkB;AAC7BlB,EAAAA,MAAM,EAAE;AACJI,IAAAA,IAAI,EAAE,CADF;AAEJe,IAAAA,cAAc,EAAE,UAFZ;AAGJC,IAAAA,YAAY,EAAE;AAHV,GADqB;AAM7BN,EAAAA,QAAQ,EAAE;AACNO,IAAAA,UAAU,EAAE,MADN;AAENC,IAAAA,QAAQ,EAAE,EAFJ;AAGNC,IAAAA,SAAS,EAAE,QAHL;AAINC,IAAAA,SAAS,EAAE,EAJL;AAKNJ,IAAAA,YAAY,EAAE,GALR;AAMNK,IAAAA,OAAO,EAAE;AANH,GANmB;AAc7BxB,EAAAA,MAAM,EAAE;AACJoB,IAAAA,UAAU,EAAE,MADR;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,SAAS,EAAE,QAHP;AAIJH,IAAAA,YAAY,EAAE,GAJV;AAKJK,IAAAA,OAAO,EAAE,EALL;AAMJC,IAAAA,KAAK,EAAE;AANH,GAdqB;AAsB7BjB,EAAAA,aAAa,EAAE;AACXkB,IAAAA,eAAe,EAAE,mBADN;AAEXC,IAAAA,YAAY,EAAE,EAFH;AAGXC,IAAAA,UAAU,EAAE,EAHD;AAIXC,IAAAA,WAAW,EAAE,EAJF;AAKXN,IAAAA,SAAS,EAAE,EALA;AAMXC,IAAAA,OAAO,EAAE;AANE,GAtBc;AA8B7Bf,EAAAA,iBAAiB,EAAE;AACfgB,IAAAA,KAAK,EAAE,OADQ;AAEfJ,IAAAA,QAAQ,EAAE,EAFK;AAGfD,IAAAA,UAAU,EAAE,MAHG;AAIfE,IAAAA,SAAS,EAAE,QAJI;AAKfQ,IAAAA,aAAa,EAAE,WALA;AAMfC,IAAAA,aAAa,EAAE;AANA,GA9BU;AAsC7BrB,EAAAA,aAAa,EAAE;AACXP,IAAAA,IAAI,EAAE;AADK,GAtCc;AAyC7BS,EAAAA,QAAQ,EAAE;AACNS,IAAAA,QAAQ,EAAE,EADJ;AAENI,IAAAA,KAAK,EAAE,MAFD;AAGNL,IAAAA,UAAU,EAAE,MAHN;AAINM,IAAAA,eAAe,EAAE,WAJX;AAKNM,IAAAA,KAAK,EAAE,EALD;AAMNV,IAAAA,SAAS,EAAE;AANL,GAzCmB;AAiD7BW,EAAAA,MAAM,EAAE;AACJP,IAAAA,eAAe,EAAE,OADb;AAEJQ,IAAAA,MAAM,EAAE;AAFJ,GAjDqB;AAqD7B7B,EAAAA,UAAU,EAAE;AACRa,IAAAA,cAAc,EAAE,QADR;AAERiB,IAAAA,UAAU,EAAE,QAFJ;AAGRP,IAAAA,UAAU,EAAE,EAHJ;AAIRC,IAAAA,WAAW,EAAE,CAJL;AAKRL,IAAAA,OAAO,EAAE,EALD;AAMRG,IAAAA,YAAY,EAAE,EANN;AAORD,IAAAA,eAAe,EAAE;AAPT,GArDiB;AA8D7BnB,EAAAA,QAAQ,EAAE;AACNW,IAAAA,cAAc,EAAE,QADV;AAENiB,IAAAA,UAAU,EAAE,QAFN;AAGNP,IAAAA,UAAU,EAAE,CAHN;AAINC,IAAAA,WAAW,EAAE,EAJP;AAKNL,IAAAA,OAAO,EAAE,EALH;AAMNG,IAAAA,YAAY,EAAE,EANR;AAOND,IAAAA,eAAe,EAAE;AAPX,GA9DmB;AAuE7BpB,EAAAA,OAAO,EAAE;AACLmB,IAAAA,KAAK,EAAE,OADF;AAELJ,IAAAA,QAAQ,EAAE,EAFL;AAGLD,IAAAA,UAAU,EAAE,MAHP;AAILU,IAAAA,aAAa,EAAE,WAJV;AAKLC,IAAAA,aAAa,EAAE;AALV,GAvEoB;AA8E7B7B,EAAAA,gBAAgB,EAAE;AACdkC,IAAAA,aAAa,EAAE;AADD;AA9EW,CAAlB,CAAf;AAoFA,eAAelD,IAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View } from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\nimport QuizResults from './QuizResults'\n\nclass Quiz extends React.Component {\n    constructor(props) {\n        super(props)\n        // this.deckList = this.props.route.params.deckList.questions\n        console.log(props)\n        this.state = {\n            questionNumber: 1, \n            showAnswer: false,\n            correctAnswers: 0\n        }\n        this.handleRestart = this.handleRestart.bind(this);\n    }\n\n    handleAnswer(ans) {\n        this.setState({ \n            questionNumber: this.state.questionNumber + 1,\n            showAnswer: false,\n            correctAnswers: ans ? this.state.correctAnswers + 1 : this.state.correctAnswers\n        })\n    }\n\n    handleRestart() {\n        this.setState({\n            questionNumber: 1,\n            showAnswer: false,\n            correctAnswers: 0\n        })\n    }\n\n    showAnswer() {\n        return (\n            <View style={styles.bottom}>\n                <Text style={styles.answer}>{this.deckList[this.state.questionNumber - 1].answer}</Text>\n\n                <View style={styles.buttonsContainer}>\n                    <View style={{ flex: 1 }}>\n                        <TouchableOpacity\n                            onPress={() => this.handleAnswer(true)}\n                            style={styles.btnSuccess}>\n                                <Text style={styles.btnText}>Correct</Text>\n                        </TouchableOpacity>\n                    </View>\n\n                    <View style={{ flex: 1 }}>\n                        <TouchableOpacity\n                            onPress={() => this.handleAnswer(false)}\n                            style={styles.btnError}>\n                                <Text style={styles.btnText}>Incorrect</Text>\n                        </TouchableOpacity>\n                    </View>\n                </View>\n\n            </View>\n        )\n    }\n\n    showAnswerButton() {\n        return (\n            <View style={styles.bottom}>\n                <TouchableOpacity\n                    style={styles.showAnswerBtn}\n                    onPress={() => this.setState({ showAnswer: true })}\n                >\n                    <Text style={styles.showAnswerBtnText}>Show answer</Text>\n                </TouchableOpacity>\n            </View>\n        )\n    }\n\n    render() {\n        const { questionNumber, showAnswer, correctAnswers } = this.state\n\n        return (\n            <View style={styles.viewContainer}>\n                {questionNumber <= this.deckList.length && \n                    <View>\n                        <Text style={styles.progress}>{questionNumber} / {this.deckList.length}</Text>\n                        <Text style={styles.question}>\n                            {this.deckList[questionNumber - 1].question}\n                        </Text>\n                    </View>\n                }\n\n                {questionNumber <= this.deckList.length\n                    ? showAnswer ? this.showAnswer() : this.showAnswerButton()\n                    : <QuizResults \n                        correctAnswers={correctAnswers} \n                        totalQuestions={this.deckList.length} \n                        handleRestart={this.handleRestart}/>\n                }\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    bottom: {\n        flex: 1,\n        justifyContent: 'flex-end',\n        marginBottom: 15\n    },\n    question: {\n        fontWeight: 'bold',\n        fontSize: 24,\n        textAlign: 'center',\n        marginTop: 10,\n        marginBottom: 100,\n        padding: 15\n    },\n    answer: {\n        fontWeight: 'bold',\n        fontSize: 24,\n        textAlign: 'center',\n        marginBottom: 100,\n        padding: 15,\n        color: 'rgb(10, 125, 240)',\n    },\n    showAnswerBtn: {\n        backgroundColor: 'rgb(10, 125, 240)',\n        borderRadius: 10,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 10,\n        padding: 20,\n    },\n    showAnswerBtnText: {\n        color: 'white',\n        fontSize: 16,\n        fontWeight: 'bold',\n        textAlign: 'center',\n        textTransform: 'uppercase',\n        letterSpacing: 1\n    },\n    viewContainer: {\n        flex: 1,\n    },\n    progress: {\n        fontSize: 20,\n        color: 'gray',\n        fontWeight: 'bold',\n        backgroundColor: 'lightgray',\n        width: 80,\n        textAlign: 'center'\n    },\n    button: {\n        backgroundColor: 'green',\n        margin: 10\n    },\n    btnSuccess: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 10,\n        marginRight: 5,\n        padding: 20,\n        borderRadius: 10,\n        backgroundColor: '#28A745'\n    },\n    btnError: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 5,\n        marginRight: 10,\n        padding: 20,\n        borderRadius: 10,\n        backgroundColor: '#DC3545'\n    },\n    btnText: {\n        color: 'white',\n        fontSize: 16,\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        letterSpacing: 0.5\n    },\n    buttonsContainer: {\n        flexDirection: 'row'\n    }\n})\n\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}