{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/dannyohana/Desktop/mobile-flashcards/components/Quiz.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nvar Quiz = function (_React$Component) {\n  _inherits(Quiz, _React$Component);\n\n  var _super = _createSuper(Quiz);\n\n  function Quiz(props) {\n    var _this;\n\n    _classCallCheck(this, Quiz);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      questionNumber: 1,\n      showAnswer: false\n    };\n    console.log(_this.props);\n    _this.deckList = _this.props.route.params.deckList;\n    return _this;\n  }\n\n  _createClass(Quiz, [{\n    key: \"handleAnswer\",\n    value: function handleAnswer(ans) {\n      this.setState({\n        questionNumber: this.state.questionNumber + 1\n      });\n    }\n  }, {\n    key: \"showAnswer\",\n    value: function showAnswer() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, \"Answer: \"), React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, this.deckList[this.state.questionNumber - 1].answer, \" \"), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, \"How did you do?\"), React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, \"You answered...\"), React.createElement(View, {\n        style: styles.buttonsContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.handleAnswer(true);\n        },\n        style: styles.btnSuccess,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, \"Correct\"))), React.createElement(View, {\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.handleAnswer(false);\n        },\n        style: styles.btnError,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: styles.btnText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }\n      }, \"Incorrect\")))));\n    }\n  }, {\n    key: \"showAnswerButton\",\n    value: function showAnswerButton() {\n      var _this3 = this;\n\n      return React.createElement(TouchableOpacity, {\n        style: styles.item,\n        onPress: function onPress() {\n          return _this3.setState({\n            showAnswer: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 16\n        }\n      }, React.createElement(Text, {\n        style: styles.item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, \"Show answer\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.viewContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }\n      }, \"Quiz time! \", this.state.questionNumber), React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }, \"Question: \", this.state.showAnswer), React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }\n      }, this.deckList[this.state.questionNumber - 1].question), this.state.showAnswer ? this.showAnswer() : this.showAnswerButton());\n    }\n  }]);\n\n  return Quiz;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  item: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    backgroundColor: 'rgb(10, 125, 240)',\n    borderRadius: 10,\n    marginLeft: 10,\n    marginRight: 10,\n    marginTop: 10,\n    padding: 20,\n    color: \"white\"\n  },\n  viewContainer: {\n    flex: 1\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  title: {\n    fontSize: 20,\n    color: 'black',\n    fontWeight: 'bold'\n  },\n  subtitle: {\n    color: 'black',\n    fontSize: 30\n  },\n  button: {\n    backgroundColor: 'green',\n    margin: 10\n  },\n  btnSuccess: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginRight: 8,\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: '#28A745'\n  },\n  btnError: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginLeft: 8,\n    height: 50,\n    borderRadius: 10,\n    backgroundColor: '#DC3545'\n  },\n  btnText: {\n    color: \"white\",\n    fontSize: 14,\n    textTransform: 'uppercase'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  }\n});\nexport default Quiz;","map":{"version":3,"sources":["/Users/dannyohana/Desktop/mobile-flashcards/components/Quiz.js"],"names":["React","TouchableOpacity","Quiz","props","state","questionNumber","showAnswer","console","log","deckList","route","params","ans","setState","styles","title","subtitle","answer","buttonsContainer","flex","handleAnswer","btnSuccess","btnText","btnError","item","viewContainer","question","showAnswerButton","Component","StyleSheet","create","fontSize","fontWeight","backgroundColor","borderRadius","marginLeft","marginRight","marginTop","padding","color","container","flexDirection","justifyContent","button","margin","alignItems","height","textTransform"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,SAASC,gBAAT,QAAiC,8BAAjC;;IAEMC,I;;;;;AAEF,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAACC,MAAAA,cAAc,EAAE,CAAjB;AAAoBC,MAAAA,UAAU,EAAE;AAAhC,KAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAKL,KAAjB;AACA,UAAKM,QAAL,GAAgB,MAAKN,KAAL,CAAWO,KAAX,CAAiBC,MAAjB,CAAwBF,QAAxC;AAJe;AAKlB;;;;iCAEYG,G,EAAK;AACd,WAAKC,QAAL,CAAc;AAACR,QAAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAAX,GAA0B;AAA3C,OAAd;AACH;;;iCACY;AAAA;;AACT,aACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKP,QAAL,CAAc,KAAKL,KAAL,CAAWC,cAAX,GAA0B,CAAxC,EAA2CY,MAA1E,MAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,EAII,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAED,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,EAMI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACI,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAL,CAAkB,IAAlB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACO,UAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEP,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHJ,CADJ,CADJ,EASI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEH,UAAAA,IAAI,EAAE;AAAR,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,gBAAD;AACI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,YAAL,CAAkB,KAAlB,CAAN;AAAA,SADb;AAEI,QAAA,KAAK,EAAEN,MAAM,CAACS,QAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAET,MAAM,CAACQ,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHJ,CADJ,CATJ,CANJ,CADA;AA0BH;;;uCAEkB;AAAA;;AACf,aAAO,oBAAC,gBAAD;AACH,QAAA,KAAK,EAAER,MAAM,CAACU,IADX;AAEH,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACX,QAAL,CAAc;AAACP,YAAAA,UAAU,EAAE;AAAb,WAAd,CAAN;AAAA,SAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIH,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACU,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJG,CAAP;AAMH;;;6BAEQ;AACL,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEV,MAAM,CAACW,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEX,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0C,KAAKZ,KAAL,CAAWC,cAArD,CADJ,EAEI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAES,MAAM,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAsC,KAAKX,KAAL,CAAWE,UAAjD,CAFJ,EAGI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACE,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKP,QAAL,CAAc,KAAKL,KAAL,CAAWC,cAAX,GAA0B,CAAxC,EAA2CqB,QAA1E,CAHJ,EAKK,KAAKtB,KAAL,CAAWE,UAAX,GAAwB,KAAKA,UAAL,EAAxB,GAA4C,KAAKqB,gBAAL,EALjD,CADJ;AASH;;;;EA5Dc3B,KAAK,CAAC4B,S;;AA+DzB,IAAMd,MAAM,GAAGe,UAAU,CAACC,MAAX,CAAkB;AAC7BN,EAAAA,IAAI,EAAE;AACFO,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,MAFV;AAGFC,IAAAA,eAAe,EAAE,mBAHf;AAIFC,IAAAA,YAAY,EAAE,EAJZ;AAKFC,IAAAA,UAAU,EAAE,EALV;AAMFC,IAAAA,WAAW,EAAE,EANX;AAOFC,IAAAA,SAAS,EAAE,EAPT;AAQFC,IAAAA,OAAO,EAAE,EARP;AASFC,IAAAA,KAAK,EAAE;AATL,GADuB;AAY7Bd,EAAAA,aAAa,EAAE;AACXN,IAAAA,IAAI,EAAE;AADK,GAZc;AAe7BqB,EAAAA,SAAS,EAAE;AACPrB,IAAAA,IAAI,EAAE,CADC;AAEPsB,IAAAA,aAAa,EAAE,KAFR;AAGPC,IAAAA,cAAc,EAAE;AAHT,GAfkB;AAoB7B3B,EAAAA,KAAK,EAAE;AACHgB,IAAAA,QAAQ,EAAE,EADP;AAEHQ,IAAAA,KAAK,EAAE,OAFJ;AAGHP,IAAAA,UAAU,EAAE;AAHT,GApBsB;AAyB7BhB,EAAAA,QAAQ,EAAE;AACNuB,IAAAA,KAAK,EAAE,OADD;AAENR,IAAAA,QAAQ,EAAE;AAFJ,GAzBmB;AA8B7BY,EAAAA,MAAM,EAAE;AACJV,IAAAA,eAAe,EAAE,OADb;AAEJW,IAAAA,MAAM,EAAE;AAFJ,GA9BqB;AAkC7BvB,EAAAA,UAAU,EAAE;AACRqB,IAAAA,cAAc,EAAE,QADR;AAERG,IAAAA,UAAU,EAAE,QAFJ;AAGRT,IAAAA,WAAW,EAAE,CAHL;AAIRU,IAAAA,MAAM,EAAE,EAJA;AAKRZ,IAAAA,YAAY,EAAE,EALN;AAMRD,IAAAA,eAAe,EAAE;AANT,GAlCiB;AA0C7BV,EAAAA,QAAQ,EAAE;AACNmB,IAAAA,cAAc,EAAE,QADV;AAENG,IAAAA,UAAU,EAAE,QAFN;AAGNV,IAAAA,UAAU,EAAE,CAHN;AAINW,IAAAA,MAAM,EAAE,EAJF;AAKNZ,IAAAA,YAAY,EAAE,EALR;AAMND,IAAAA,eAAe,EAAE;AANX,GA1CmB;AAkD7BX,EAAAA,OAAO,EAAE;AACLiB,IAAAA,KAAK,EAAE,OADF;AAELR,IAAAA,QAAQ,EAAE,EAFL;AAGLgB,IAAAA,aAAa,EAAE;AAHV,GAlDoB;AAuD7B7B,EAAAA,gBAAgB,EAAE;AACduB,IAAAA,aAAa,EAAE;AADD;AAvDW,CAAlB,CAAf;AA+DA,eAAevC,IAAf","sourcesContent":["import React from 'react'\nimport { StyleSheet, Text, View, Button} from 'react-native'\nimport { TouchableOpacity } from 'react-native-gesture-handler'\n\nclass Quiz extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {questionNumber: 1, showAnswer: false};\n        console.log(this.props);\n        this.deckList = this.props.route.params.deckList;\n    }\n\n    handleAnswer(ans) {\n        this.setState({questionNumber: this.state.questionNumber+1});\n    }\n    showAnswer() {\n        return (\n        <View>\n            <Text style={styles.title}>Answer: </Text>\n            <Text style={styles.subtitle}>{this.deckList[this.state.questionNumber-1].answer} </Text>\n            <Text style={styles.title}>How did you do?</Text>\n            <Text style={styles.subtitle}>You answered...</Text>\n\n            <View style={styles.buttonsContainer}>\n                <View style={{ flex: 1 }}>\n                    <TouchableOpacity\n                        onPress={() => this.handleAnswer(true)}\n                        style={styles.btnSuccess}>\n                        <Text style={styles.btnText}>Correct</Text>\n                    </TouchableOpacity>\n                </View>\n\n                <View style={{ flex: 1 }}>\n                    <TouchableOpacity\n                        onPress={() => this.handleAnswer(false)}\n                        style={styles.btnError}>\n                        <Text style={styles.btnText}>Incorrect</Text>\n                    </TouchableOpacity>\n                </View>\n            </View>\n\n        </View> );\n    }\n\n    showAnswerButton() {\n        return <TouchableOpacity\n            style={styles.item}\n            onPress={() => this.setState({showAnswer: true})}\n        >\n            <Text style={styles.item}>Show answer</Text>\n        </TouchableOpacity>;\n    }\n\n    render() {\n        return (\n            <View style={styles.viewContainer}>\n                <Text style={styles.subtitle}>Quiz time! {this.state.questionNumber}</Text>\n                <Text style={styles.title}>Question: {this.state.showAnswer}</Text>\n                <Text style={styles.subtitle}>{this.deckList[this.state.questionNumber-1].question}</Text>\n\n                {this.state.showAnswer ? this.showAnswer() : this.showAnswerButton()}\n            </View>\n        )\n    }\n}\n\nconst styles = StyleSheet.create({\n    item: {\n        fontSize: 20,\n        fontWeight: 'bold',\n        backgroundColor: 'rgb(10, 125, 240)',\n        borderRadius: 10,\n        marginLeft: 10,\n        marginRight: 10,\n        marginTop: 10,\n        padding: 20,\n        color: \"white\"\n    },\n    viewContainer: {\n        flex: 1\n    },\n    container: {\n        flex: 1,\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    title: {\n        fontSize: 20,\n        color: 'black',\n        fontWeight: 'bold'\n    },\n    subtitle: {\n        color: 'black',\n        fontSize: 30\n\n    },\n    button: {\n        backgroundColor: 'green',\n        margin: 10\n    },\n    btnSuccess: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginRight: 8,\n        height: 50,\n        borderRadius: 10,\n        backgroundColor: '#28A745'\n    },\n    btnError: {\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginLeft: 8,\n        height: 50,\n        borderRadius: 10,\n        backgroundColor: '#DC3545'\n    },\n    btnText: {\n        color: \"white\",\n        fontSize: 14,\n        textTransform: 'uppercase'\n    },\n    buttonsContainer: {\n        flexDirection: 'row'\n    }\n\n\n})\n\n\nexport default Quiz"]},"metadata":{},"sourceType":"module"}